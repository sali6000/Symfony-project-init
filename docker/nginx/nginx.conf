# Ce fichier fournit la configuration de base pour Nginx, couvrant la gestion des processus, des connexions, des logs, des types de fichiers, et des optimisations comme gzip. 
# Il sert de base solide pour adapter les configurations HTTP selon les besoins spécifiques du projet.

# Définit l'utilisateur sous lequel Nginx fonctionnera. Ici, c'est "nginx".
user  nginx;

# Définit le nombre de processus de travail Nginx. "auto" adapte automatiquement ce nombre au nombre de cœurs disponibles sur le serveur.
worker_processes  auto;

# Chemin où les messages d'erreurs seront enregistrés. Le niveau "warn" capture les avertissements et erreurs critiques.
error_log  /var/log/nginx/error.log warn;

# Définit le fichier contenant le PID (Process ID) du processus principal Nginx.
pid        /var/run/nginx.pid;

# Bloc de configuration des événements (gère les connexions réseau)
events {
    # Définit le nombre maximal de connexions simultanées pouvant être traitées par chaque processus de travail.
    worker_connections  1024;
}

# Bloc principal pour la configuration HTTP.
http {
    # Charge les types MIME depuis un fichier système. Ces types définissent comment Nginx doit traiter différents types de fichiers (ex : .html, .css, .js, etc.).
    include       /etc/nginx/mime.types;

    # Type par défaut à utiliser si un fichier n'a pas de type MIME défini.
    default_type  application/octet-stream;

    # Définit le format du journal d'accès. Ici, il inclut des informations comme l'adresse IP, la requête, l'état HTTP, etc.
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Chemin du fichier où les journaux d'accès seront enregistrés, en utilisant le format "main" défini ci-dessus.
    access_log  /var/log/nginx/access.log  main;

    # Active l'envoi efficace de fichiers en utilisant le système d'exploitation pour minimiser l'utilisation des ressources.
    sendfile        on;

    # Option désactivée ici, mais si activée, optimise l'envoi de paquets pour les gros fichiers (utile pour les transferts de fichiers lourds).
    #tcp_nopush     on;

    # Temps d'attente maximal pour garder une connexion active avec un client inactif (en secondes).
    keepalive_timeout  65;

    # Active la compression gzip pour réduire la taille des réponses HTTP et accélérer leur transfert.
    gzip on;

    # Désactive gzip pour les anciennes versions d'Internet Explorer (bug connu sur "msie6").
    gzip_disable "msie6";

    # Charge toutes les configurations supplémentaires présentes dans le dossier "/etc/nginx/conf.d/".
    # Cela permet d'ajouter ou de modifier des configurations spécifiques pour différents hôtes virtuels.
    include /etc/nginx/conf.d/*.conf;
}
